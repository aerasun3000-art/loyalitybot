import { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { getClientAnalytics } from '../services/supabase'
import { getTelegramUser, getChatId, hapticFeedback, closeApp } from '../utils/telegram'
import Loader from '../components/Loader'

const Profile = () => {
  const navigate = useNavigate()
  const tgUser = getTelegramUser()
  const chatId = getChatId()
  
  const [loading, setLoading] = useState(true)
  const [clientData, setClientData] = useState(null)
  const [language, setLanguage] = useState('ru')

  useEffect(() => {
    loadProfile()
  }, [chatId])

  const loadProfile = async () => {
    try {
      setLoading(true)
      const data = await getClientAnalytics(chatId)
      setClientData(data)
    } catch (error) {
      console.error('Error loading profile:', error)
    } finally {
      setLoading(false)
    }
  }

  const toggleLanguage = () => {
    hapticFeedback('light')
    setLanguage(prev => prev === 'ru' ? 'en' : 'ru')
    // TODO: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∫–æ –≤—Å–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
  }

  const handleLogout = () => {
    hapticFeedback('medium')
    closeApp()
  }

  if (loading) {
    return <Loader text="–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è..." />
  }

  const memberSince = clientData?.reg_date 
    ? new Date(clientData.reg_date).toLocaleDateString('ru', {
        month: 'long',
        year: 'numeric'
      })
    : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –®–∞–ø–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <div className="bg-gradient-to-br from-pink-400 to-rose-500 px-4 pt-6 pb-16">
        <div className="flex items-center justify-between mb-8">
          <button
            onClick={() => navigate('/')}
            className="text-white"
          >
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path
                d="M15 18L9 12L15 6"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
              />
            </svg>
          </button>
          <h1 className="text-xl font-bold text-white">–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <div className="w-6" /> {/* Spacer */}
        </div>

        {/* –ê–≤–∞—Ç–∞—Ä –∏ –∏–º—è */}
        <div className="flex flex-col items-center">
          <div className="w-24 h-24 bg-white rounded-full flex items-center justify-center mb-4 shadow-lg">
            {tgUser?.photo_url ? (
              <img 
                src={tgUser.photo_url} 
                alt="Avatar" 
                className="w-full h-full rounded-full object-cover"
              />
            ) : (
              <span className="text-5xl">üë§</span>
            )}
          </div>
          <h2 className="text-2xl font-bold text-white mb-1">
            {clientData?.name || tgUser?.first_name || '–ì–æ—Å—Ç—å'}
          </h2>
          <p className="text-white/80 text-sm">
            {clientData?.phone || '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω'}
          </p>
          <div className="mt-2 bg-white/20 backdrop-blur-sm px-4 py-1 rounded-full">
            <span className="text-white text-sm">
              –° {memberSince}
            </span>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="px-4 -mt-8 pb-20">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="bg-white rounded-2xl p-4 shadow-lg mb-4">
          <h3 className="font-bold text-gray-800 mb-4">–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          
          <div className="grid grid-cols-2 gap-4">
            <div className="text-center">
              <div className="text-3xl mb-1">üí∞</div>
              <div className="text-2xl font-bold text-pink-500">
                {clientData?.balance || 0}
              </div>
              <div className="text-xs text-gray-500">–ë–∞–ª–ª–æ–≤ –Ω–∞ —Å—á—ë—Ç–µ</div>
            </div>
            
            <div className="text-center">
              <div className="text-3xl mb-1">üìà</div>
              <div className="text-2xl font-bold text-green-500">
                {clientData?.analytics?.totalEarned || 0}
              </div>
              <div className="text-xs text-gray-500">–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ</div>
            </div>
            
            <div className="text-center">
              <div className="text-3xl mb-1">üéØ</div>
              <div className="text-2xl font-bold text-blue-500">
                {clientData?.analytics?.totalSpent || 0}
              </div>
              <div className="text-xs text-gray-500">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
            </div>
            
            <div className="text-center">
              <div className="text-3xl mb-1">üîÑ</div>
              <div className="text-2xl font-bold text-purple-500">
                {clientData?.analytics?.transactionCount || 0}
              </div>
              <div className="text-xs text-gray-500">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</div>
            </div>
          </div>
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-white rounded-2xl overflow-hidden shadow-sm mb-4">
          <button
            onClick={toggleLanguage}
            className="w-full flex items-center justify-between p-4 border-b border-gray-100"
          >
            <div className="flex items-center gap-3">
              <span className="text-2xl">üåê</span>
              <span className="font-semibold text-gray-800">–Ø–∑—ã–∫</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-gray-600">
                {language === 'ru' ? '–†—É—Å—Å–∫–∏–π' : 'English'}
              </span>
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path
                  d="M7 8L10 11L13 8"
                  stroke="currentColor"
                  strokeWidth="2"
                  strokeLinecap="round"
                />
              </svg>
            </div>
          </button>

          <button
            onClick={() => {
              hapticFeedback('light')
              navigate('/history')
            }}
            className="w-full flex items-center justify-between p-4 border-b border-gray-100"
          >
            <div className="flex items-center gap-3">
              <span className="text-2xl">üìä</span>
              <span className="font-semibold text-gray-800">–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</span>
            </div>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path
                d="M8 6L12 10L8 14"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
              />
            </svg>
          </button>

          <button
            onClick={() => {
              hapticFeedback('light')
              // TODO: –û—Ç–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏
            }}
            className="w-full flex items-center justify-between p-4 border-b border-gray-100"
          >
            <div className="flex items-center gap-3">
              <span className="text-2xl">üí¨</span>
              <span className="font-semibold text-gray-800">–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</span>
            </div>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path
                d="M8 6L12 10L8 14"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
              />
            </svg>
          </button>

          <button
            onClick={() => {
              hapticFeedback('light')
              // TODO: –û—Ç–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
            }}
            className="w-full flex items-center justify-between p-4"
          >
            <div className="flex items-center gap-3">
              <span className="text-2xl">‚ÑπÔ∏è</span>
              <span className="font-semibold text-gray-800">–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</span>
            </div>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path
                d="M8 6L12 10L8 14"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
              />
            </svg>
          </button>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞ */}
        <div className="bg-gradient-to-br from-pink-100 to-pink-200 rounded-2xl p-4 mb-4">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-bold text-gray-800 mb-1">–°—Ç–∞—Ç—É—Å</h3>
              <p className="text-pink-600 font-semibold">
                {clientData?.status === 'active' ? '‚úì –ê–∫—Ç–∏–≤–Ω—ã–π' : '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π'}
              </p>
            </div>
            <div className="text-5xl">
              {clientData?.status === 'active' ? '‚≠ê' : '‚ùå'}
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ */}
        {clientData?.referrer_chat_id && (
          <div className="bg-purple-50 rounded-2xl p-4 mb-4">
            <div className="flex items-center gap-2 mb-2">
              <span className="text-2xl">ü§ù</span>
              <h3 className="font-bold text-gray-800">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h3>
            </div>
            <p className="text-sm text-gray-600">
              –í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –¥—Ä—É–≥–æ–º! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã.
            </p>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
        <button
          onClick={handleLogout}
          className="w-full bg-white border-2 border-red-200 text-red-500 py-4 rounded-xl font-semibold hover:bg-red-50 transition-colors"
        >
          –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </button>
      </div>
    </div>
  )
}

export default Profile

